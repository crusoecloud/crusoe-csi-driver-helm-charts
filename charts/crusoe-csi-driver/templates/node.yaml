apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{.Release.Name }}-node
spec:
  selector:
    matchLabels:
      app: {{.Release.Name }}
  template:
    metadata:
      labels:
        app: {{.Release.Name }}
    spec:
      imagePullSecrets:
        - name: registry-credentials
      serviceAccountName: crusoe-csi-driver-node-sa
      containers:
        - name: crusoe-csi-driver
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          args:
            - "--services=node,identity"
            - "--socket-address=unix:/csi/csi-node.sock"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- with .Values.crusoe.projectID }}
            - name: CRUSOE_PROJECT_ID
              value: {{ . }}
            {{- end }}
          envFrom:
            - secretRef:
                name: {{.Values.secrets.crusoeApiKeys.secretName}}
                optional: false
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
          securityContext:
            privileged: true
          {{- with .Values.node.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: csi-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0
          args:
            - "--v=5"
            - "--csi-address=/csi/csi-node.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/{{.Release.Name }}/csi-node.sock"
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
      volumes:
        # This volume is where the socket for kubelet->driver communication is done
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/{{.Release.Name }}
            type: DirectoryOrCreate
          # This volume is where the driver mounts volumes
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
          # This volume is where the node-driver-registrar registers the plugin
          # with kubelet
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          # This volume is where devices are located on the underlying instance
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory